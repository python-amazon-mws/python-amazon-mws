name: CI

on:
  push:
  pull_request:

concurrency: code-quality-${{ github.sha }}

env:
  # Set an environment variable to select pip's cache directory for us to actually cache between runs.
  PIP_CACHE_DIR: /tmp/pip-cache-dir
  PYTHON_VERSION: "3.11"

jobs:
  linting:
    name: Code quality checks
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Run pre-commit checks
        uses: pre-commit/action@v3.0.0
        with:
          extra_args: --all-files

  tests:
    name: Tests on ${{ matrix.os }}, Python ${{ matrix.python-version }}
    needs: linting
    runs-on: ${{ matrix.os }}

    # Strategy sets up a matrix of python versions to run the tests against
    strategy:
      # Specify no fail-fast strategy, so that all tests are executed independently
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        # Periodically check for versions here: https://github.com/actions/python-versions
        python-version: ["3.9", "3.10", "3.11"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: ./.github/workflows/composite/setup-dev-dependencies
        with:
          python_version: ${{ matrix.python-version }}

      - name: Run pytest
        run: |
          pytest

  coverage:
    name: Coverage report
    needs: tests
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: ./.github/workflows/composite/setup-dev-dependencies
        with:
          python_version: ${{ env.PYTHON_VERSION }}

      - name: Generate coverage report
        run: |
          pytest --cov=mws

      - name: Send report to codecov
        uses: codecov/codecov-action@v2
