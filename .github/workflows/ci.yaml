name: CI

on: [push, pull_request]

jobs:
  testing:
    runs-on: ${{ matrix.os }}

    # Strategy sets up a matrix of python versions to run the tests against
    strategy:
      # Specify no fail-fast strategy, so that all testing is executed independently
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        # Periodically check for versions here: https://github.com/actions/python-versions
        python-version: [3.6, 3.7, 3.8, 3.9, "3.10.0-rc.2"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .

    - name: Run pytest
      run: |
        pip install pytest
        pytest

  linting:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .

    - name: Run flake8
      run: |
       pip install flake8
       flake8 .

  coverage:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .

    - name: Generate coverage report
      run: |
        pip install pytest-cov
        pytest --cov=mws

    - name: Send report to codecov
      uses: codecov/codecov-action@v1

  formatting:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .

    - name: Install and run Black
      run: |
       pip install black>=20.8b1
       black --check mws
       black --check tests
